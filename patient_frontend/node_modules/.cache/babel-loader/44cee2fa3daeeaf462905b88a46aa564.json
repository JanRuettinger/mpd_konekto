{"ast":null,"code":"var _jsxFileName = \"/patient_frontend/src/src/Views/Home/index.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Typography, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppContext, API } from '../../utils';\nimport { Header } from '../../Layout';\nimport Container from '../../custom_theme/components/Container';\nimport SOSButton from './SOSButton';\nimport MiscButton from './MiscButton';\nimport ambulance_icon_path from '../../imgs/Ambulance-small-red.png';\nimport police_icon_path from '../../imgs/Police-small-blue.png';\nimport CONSTANTS from '../../utils/Constants';\n\nconst styles = theme => ({\n  item: {\n    width: '100%',\n    'text-align': 'center',\n    'border-radius': '5px',\n    'margin-top': '10px'\n  },\n  icon: {\n    height: '50px',\n    width: '50px'\n  },\n  imageContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '8px'\n  }\n});\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      componentType: 'all',\n      cancel: false\n    };\n    this.handleDirectSOS = this.handleDirectSOS.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.showPosition = this.showPosition.bind(this);\n  }\n\n  async getLocation() {\n    if (navigator.geolocation) {\n      this.context.setLocation(null);\n      await navigator.geolocation.getCurrentPosition(this.showPosition);\n    } else {\n      this.context.setLocation(null);\n      console.log('Geo Location not supported by browser');\n    }\n  } //function that retrieves the position\n\n\n  showPosition(position) {\n    console.log('Show Position');\n    let location = {\n      longitude: Math.round(position.coords.longitude * 100) / 100,\n      latitude: Math.round(position.coords.latitude * 100) / 100\n    };\n    console.log(location);\n    this.context.setLocation(location); // this.setState({ location: location });\n  }\n\n  async componentDidMount() {\n    // check in database if user already did onboarding\n    let user;\n\n    try {\n      user = await API.getUser(CONSTANTS.USER_ID);\n      this.context.setFullname(user.data.fullname);\n      console.log('User successfully retrieved from DB');\n    } catch (error) {\n      console.log('unable to retrieve user from database');\n    }\n\n    if (user) {\n      // write user onboardingstatus to global state\n      console.log('USer');\n      console.log(user);\n      this.context.setOnBoardingStatus(user.data.onBoardingStatus);\n      this.context.setFullname(user.data.fullname); // if user onboarding === false redirect to onboarding page\n\n      if (user.data.onBoardingStatus === false) {\n        this.props.history.push('/onboarding');\n      }\n    } else {\n      console.log('Error no user retrieved');\n    }\n\n    await this.getLocation();\n  }\n\n  handleDirectSOS() {\n    this.props.history.push('/emergency_sent');\n  }\n\n  toMisc() {\n    this.props.history.push('/misc_emergency');\n  }\n\n  onSubmit(type, check) {\n    //   console.log('OnSubmit function called' + check + type);\n    this.setState({\n      cancel: check\n    });\n\n    if (type === 'police') {\n      this.setState({\n        componentType: 'police'\n      });\n      this.context.setEmergencyType(type);\n      console.log('onSubmit: police');\n    } else if (type === 'ambulance') {\n      this.setState({\n        componentType: 'ambulance'\n      });\n      this.context.setEmergencyType(type);\n      console.log('onSubmit: ambulance');\n    } else if (type === 'MiscEmergency') {\n      this.props.history.push('/misc_emergency');\n    }\n  }\n\n  render() {\n    console.log('render: ' + this.state.componentType);\n    let component;\n    let cancel = this.state.cancel;\n\n    if (this.state.componentType === 'all' || cancel) {\n      component = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.classes.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ambulance_icon_path,\n        alt: \"AmbulanceIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), ' '), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"112 Rescue\")), React.createElement(SOSButton, {\n        key: \"ambulance\",\n        type: \"ambulance\",\n        color: \"primary\",\n        onSubmit: (type, check) => this.onSubmit(type, check),\n        rescuetype: \"Rescue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.classes.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: police_icon_path,\n        alt: \"PoliceIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), ' '), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"110 Police\")), React.createElement(SOSButton, {\n        key: \"police\",\n        type: \"police\",\n        color: \"secondary\",\n        onSubmit: (type, check) => this.onSubmit(type, check),\n        rescuetype: \"Police\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(MiscButton, {\n        key: \"miscEmergency\",\n        type: \"MiscEmergency\",\n        onSubmit: (type, check) => this.onSubmit(type, check),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }));\n    } else if (this.state.componentType === 'ambulance') {\n      component = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.classes.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ambulance_icon_path,\n        alt: \"AmbulanceIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), ' '), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Rescue\")), React.createElement(SOSButton, {\n        key: \"ambulance\",\n        type: \"ambulance\",\n        color: \"primary\",\n        onSubmit: (type, check) => this.onSubmit(type, check),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    } else if (this.state.componentType === 'police') {\n      component = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.classes.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: police_icon_path,\n        alt: \"PoliceIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), ' '), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Police\")), React.createElement(SOSButton, {\n        key: \"police\",\n        type: \"police\",\n        color: \"secondary\",\n        onSubmit: (type, check) => this.onSubmit(type, check),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Send out SOS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: this.classes.container,\n      direction: \"column\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      className: (this.classes.item, this.classes.forwardbutton),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, component))));\n  }\n\n}\n\nHome.contextType = AppContext;\nexport default withRouter(withStyles(styles)(Home));\n/*\n          <Button\n            className={this.classes.miscbutton}\n            onClick={this.toMisc}\n            key=\"miscEmergency\"\n            type=\"MiscEmergency\"\n            //onSubmit={(type, check) => this.onSubmit(type, check)}\n          >\n            Further Emergency Services\n          </Button> */","map":{"version":3,"sources":["/patient_frontend/src/src/Views/Home/index.js"],"names":["React","withRouter","Typography","Grid","withStyles","AppContext","API","Header","Container","SOSButton","MiscButton","ambulance_icon_path","police_icon_path","CONSTANTS","styles","theme","item","width","icon","height","imageContainer","display","justifyContent","margin","Home","Component","constructor","props","classes","state","componentType","cancel","handleDirectSOS","bind","onSubmit","getLocation","showPosition","navigator","geolocation","context","setLocation","getCurrentPosition","console","log","position","location","longitude","Math","round","coords","latitude","componentDidMount","user","getUser","USER_ID","setFullname","data","fullname","error","setOnBoardingStatus","onBoardingStatus","history","push","toMisc","type","check","setState","setEmergencyType","render","component","container","forwardbutton","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Typography, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppContext, API } from '../../utils';\nimport { Header } from '../../Layout';\nimport Container from '../../custom_theme/components/Container';\nimport SOSButton from './SOSButton';\nimport MiscButton from './MiscButton';\nimport ambulance_icon_path from '../../imgs/Ambulance-small-red.png';\nimport police_icon_path from '../../imgs/Police-small-blue.png';\nimport CONSTANTS from '../../utils/Constants';\n\nconst styles = theme => ({\n  item: {\n    width: '100%',\n    'text-align': 'center',\n    'border-radius': '5px',\n    'margin-top': '10px'\n  },\n  icon: {\n    height: '50px',\n    width: '50px'\n  },\n  imageContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '8px'\n  }\n});\n\nclass Home extends React.Component {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      componentType: 'all',\n      cancel: false\n    };\n    this.handleDirectSOS = this.handleDirectSOS.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.showPosition = this.showPosition.bind(this);\n  }\n\n  async getLocation() {\n    if (navigator.geolocation) {\n      this.context.setLocation(null);\n      await navigator.geolocation.getCurrentPosition(this.showPosition);\n    } else {\n      this.context.setLocation(null);\n      console.log('Geo Location not supported by browser');\n    }\n  }\n\n  //function that retrieves the position\n  showPosition(position) {\n    console.log('Show Position');\n    let location = {\n      longitude: Math.round(position.coords.longitude * 100) / 100,\n      latitude: Math.round(position.coords.latitude * 100) / 100\n    };\n    console.log(location);\n    this.context.setLocation(location);\n    // this.setState({ location: location });\n  }\n\n  async componentDidMount() {\n    // check in database if user already did onboarding\n    let user;\n    try {\n      user = await API.getUser(CONSTANTS.USER_ID);\n      this.context.setFullname(user.data.fullname);\n      console.log('User successfully retrieved from DB');\n    } catch (error) {\n      console.log('unable to retrieve user from database');\n    }\n\n    if (user) {\n      // write user onboardingstatus to global state\n      console.log('USer');\n      console.log(user);\n      this.context.setOnBoardingStatus(user.data.onBoardingStatus);\n      this.context.setFullname(user.data.fullname);\n\n      // if user onboarding === false redirect to onboarding page\n      if (user.data.onBoardingStatus === false) {\n        this.props.history.push('/onboarding');\n      }\n    } else {\n      console.log('Error no user retrieved');\n    }\n    await this.getLocation();\n  }\n\n  handleDirectSOS() {\n    this.props.history.push('/emergency_sent');\n  }\n\n  toMisc() {\n    this.props.history.push('/misc_emergency');\n  }\n\n  onSubmit(type, check) {\n    //   console.log('OnSubmit function called' + check + type);\n\n    this.setState({ cancel: check });\n    if (type === 'police') {\n      this.setState({ componentType: 'police' });\n      this.context.setEmergencyType(type);\n      console.log('onSubmit: police');\n    } else if (type === 'ambulance') {\n      this.setState({ componentType: 'ambulance' });\n      this.context.setEmergencyType(type);\n      console.log('onSubmit: ambulance');\n    } else if (type === 'MiscEmergency') {\n      this.props.history.push('/misc_emergency');\n    }\n  }\n\n  render() {\n    console.log('render: ' + this.state.componentType);\n    let component;\n    let cancel = this.state.cancel;\n    if (this.state.componentType === 'all' || cancel) {\n      component = (\n        <React.Fragment>\n          <div className={this.classes.imageContainer}>\n            <img src={ambulance_icon_path} alt=\"AmbulanceIcon\" />{' '}\n          </div>\n          <div>\n            <Typography align=\"center\" variant=\"h6\" color=\"primary\">\n              112 Rescue\n            </Typography>\n          </div>\n          <SOSButton\n            key=\"ambulance\"\n            type=\"ambulance\"\n            color=\"primary\"\n            onSubmit={(type, check) => this.onSubmit(type, check)}\n            rescuetype=\"Rescue\"\n          />\n          <br />\n          <br />\n          <div className={this.classes.imageContainer}>\n            <img src={police_icon_path} alt=\"PoliceIcon\" />{' '}\n          </div>\n          <div>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              110 Police\n            </Typography>\n          </div>\n          <SOSButton\n            key=\"police\"\n            type=\"police\"\n            color=\"secondary\"\n            onSubmit={(type, check) => this.onSubmit(type, check)}\n            rescuetype=\"Police\"\n          />\n\n          <br />\n          <br />\n          <br />\n          <MiscButton\n            key=\"miscEmergency\"\n            type=\"MiscEmergency\"\n            onSubmit={(type, check) => this.onSubmit(type, check)}\n          />\n        </React.Fragment>\n      );\n    } else if (this.state.componentType === 'ambulance') {\n      component = (\n        <React.Fragment>\n          <div className={this.classes.imageContainer}>\n            <img src={ambulance_icon_path} alt=\"AmbulanceIcon\" />{' '}\n          </div>\n          <div>\n            <Typography align=\"center\" variant=\"h6\" color=\"primary\">\n              Rescue\n            </Typography>\n          </div>\n          <SOSButton\n            key=\"ambulance\"\n            type=\"ambulance\"\n            color=\"primary\"\n            onSubmit={(type, check) => this.onSubmit(type, check)}\n          />\n        </React.Fragment>\n      );\n    } else if (this.state.componentType === 'police') {\n      component = (\n        <React.Fragment>\n          <div className={this.classes.imageContainer}>\n            <img src={police_icon_path} alt=\"PoliceIcon\" />{' '}\n          </div>\n          <div>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              Police\n            </Typography>\n          </div>\n          <SOSButton\n            key=\"police\"\n            type=\"police\"\n            color=\"secondary\"\n            onSubmit={(type, check) => this.onSubmit(type, check)}\n          />\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <Header title=\"Send out SOS\" />\n        <Container component=\"main\" maxWidth=\"sm\">\n          <Grid\n            container\n            className={this.classes.container}\n            direction=\"column\"\n            spacing={2}\n          >\n            <Grid\n              item\n              sm={12}\n              className={(this.classes.item, this.classes.forwardbutton)}\n            >\n              {component}\n            </Grid>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Home));\n\n/*\n          <Button\n            className={this.classes.miscbutton}\n            onClick={this.toMisc}\n            key=\"miscEmergency\"\n            type=\"MiscEmergency\"\n            //onSubmit={(type, check) => this.onSubmit(type, check)}\n          >\n            Further Emergency Services\n          </Button> */\n"]},"metadata":{},"sourceType":"module"}