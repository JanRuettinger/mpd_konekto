{"ast":null,"code":"var _jsxFileName = \"/patient_frontend/src/src/Views/EmergencyDetails/FormEmergencyType.js\";\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport CheckBoxGroup from '../../custom_theme/components/CheckBoxGroup';\nimport CheckBox from '../../custom_theme/components/CheckBox';\nimport CheckBoxIcon from './CheckBoxIcon';\nexport default class FormEmergencyType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lifeatdanger: props.emergencyTypes.lifeatdanger,\n      injury: props.emergencyTypes.injury,\n      illness: props.emergencyTypes.illness,\n      poisoning: props.emergencyTypes.poisoning,\n      firesmoke: props.emergencyTypes.firesmoke,\n      other: props.emergencyTypes.other\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } //somehow manage global variable set on Landingpage specifying whether police or ambulance\n\n\n  handleChange(event, checked) {\n    let new_state = this.state;\n\n    switch (event.target.value) {\n      case 'lifeatdanger':\n        new_state['lifeatdanger'] = checked;\n        break;\n\n      case 'injury':\n        new_state['injury'] = checked;\n        break;\n\n      case 'illness':\n        new_state['illness'] = checked;\n        break;\n\n      case 'poisoning':\n        new_state['poisoning'] = checked;\n        break;\n\n      case 'firesmoke':\n        new_state['firesmoke'] = checked;\n        break;\n\n      case 'other':\n        new_state['other'] = checked;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(new_state);\n    this.props.handleEmergencyType(new_state);\n  } //icon next to the buttons\n\n\n  render() {\n    // <AppContext.Consumer>; let component;</AppContext.Consumer>;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Specify emergency type\"), React.createElement(CheckBoxGroup, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CheckBox // title=\"Life at danger\"\n    , {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Life in Danger\",\n        type: \"life\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['lifeatdanger'],\n      value: \"lifeatdanger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Injury\",\n        type: \"injury\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['injury'],\n      value: \"injury\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Illness\",\n        type: \"illness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['illness'],\n      value: \"illness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Poisoning\",\n        type: \"poison\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['poisoning'],\n      value: \"poisoning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Fire / Smoke\",\n        type: \"fire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['firesmoke'],\n      value: \"firesmoke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      title: React.createElement(CheckBoxIcon, {\n        text: \"Other\",\n        type: \"other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, ' '),\n      onChange: this.handleChange,\n      checked: this.state['other'],\n      value: \"other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/patient_frontend/src/src/Views/EmergencyDetails/FormEmergencyType.js"],"names":["React","Typography","CheckBoxGroup","CheckBox","CheckBoxIcon","FormEmergencyType","Component","constructor","props","state","lifeatdanger","emergencyTypes","injury","illness","poisoning","firesmoke","other","handleChange","bind","event","checked","new_state","target","value","setState","handleEmergencyType","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport CheckBoxGroup from '../../custom_theme/components/CheckBoxGroup';\nimport CheckBox from '../../custom_theme/components/CheckBox';\nimport CheckBoxIcon from './CheckBoxIcon';\n\nexport default class FormEmergencyType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lifeatdanger: props.emergencyTypes.lifeatdanger,\n      injury: props.emergencyTypes.injury,\n      illness: props.emergencyTypes.illness,\n      poisoning: props.emergencyTypes.poisoning,\n      firesmoke: props.emergencyTypes.firesmoke,\n      other: props.emergencyTypes.other\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  //somehow manage global variable set on Landingpage specifying whether police or ambulance\n\n  handleChange(event, checked) {\n    let new_state = this.state;\n\n    switch (event.target.value) {\n      case 'lifeatdanger':\n        new_state['lifeatdanger'] = checked;\n        break;\n      case 'injury':\n        new_state['injury'] = checked;\n        break;\n      case 'illness':\n        new_state['illness'] = checked;\n        break;\n      case 'poisoning':\n        new_state['poisoning'] = checked;\n        break;\n      case 'firesmoke':\n        new_state['firesmoke'] = checked;\n        break;\n      case 'other':\n        new_state['other'] = checked;\n        break;\n      default:\n        break;\n    }\n\n    this.setState(new_state);\n    this.props.handleEmergencyType(new_state);\n  }\n\n  //icon next to the buttons\n  render() {\n    // <AppContext.Consumer>; let component;</AppContext.Consumer>;\n    return (\n      <React.Fragment>\n        <Typography align=\"center\" variant=\"h5\">\n          Specify emergency type\n        </Typography>\n        <CheckBoxGroup  align = 'left'>\n          <CheckBox\n            // title=\"Life at danger\"\n            title={\n              <CheckBoxIcon text=\"Life in Danger\" type=\"life\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['lifeatdanger']}\n            value=\"lifeatdanger\"\n          />\n          <CheckBox\n            title={\n              <CheckBoxIcon text=\"Injury\" type=\"injury\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['injury']}\n            value=\"injury\"\n          />\n          <CheckBox\n            title={\n              <CheckBoxIcon text=\"Illness\" type=\"illness\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['illness']}\n            value=\"illness\"\n          />\n          <CheckBox\n            title={\n              <CheckBoxIcon text=\"Poisoning\" type=\"poison\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['poisoning']}\n            value=\"poisoning\"\n          />\n          <CheckBox\n            title={\n              <CheckBoxIcon text=\"Fire / Smoke\" type=\"fire\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['firesmoke']}\n            value=\"firesmoke\"\n          />\n          <CheckBox\n            title={\n              <CheckBoxIcon text=\"Other\" type=\"other\">\n                {' '}\n              </CheckBoxIcon>\n            }\n            onChange={this.handleChange}\n            checked={this.state['other']}\n            value=\"other\"\n          />\n          \n        </CheckBoxGroup>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}