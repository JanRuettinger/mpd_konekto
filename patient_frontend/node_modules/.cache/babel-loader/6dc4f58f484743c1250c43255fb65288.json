{"ast":null,"code":"// utils/API.js\nimport axios from 'axios';\nimport CONSTANTS from './Constants';\n\nasync function getUser(id) {\n  let result;\n  await axios.get(CONSTANTS.URL + 'user/', {\n    params: {\n      _id: id\n    }\n  }).then(res => {\n    console.log('In user get api call');\n    console.log(res);\n    result = res.data; // console.log(res);\n    // console.log(res.data);\n  }).catch(error => {\n    console.log(error);\n  });\n  return result;\n}\n\nfunction updateUser(data) {\n  axios.post(CONSTANTS.URL + 'user/update', {\n    _id: 1,\n    data: data\n  }).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction updateOnboardingStatus(status) {\n  return axios.post(CONSTANTS.URL + 'user/update/onboardingstatus', {\n    _id: 1,\n    onBoardingStatus: status\n  }).then(res => {\n    return res.data;\n  });\n}\n\nasync function getEmergency() {\n  await axios.get(CONSTANTS.URL + 'emergency/', {\n    params: {\n      _id: 1\n    }\n  }).then(res => {\n    return res.data; // console.log(res);\n    // console.log(res.data);\n  });\n}\n\nfunction createEmergency(data) {\n  axios.post(CONSTANTS.URL + 'emergency/create', {\n    _id: 1,\n    data: data\n  }).then(res => {// console.log(res);\n    // console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction createMessage(from, message, to) {\n  // console.log('from' + from);\n  // console.log('to' + to);\n  // console.log('message' + message);\n  return axios.post(CONSTANTS.URL + 'message/create', {\n    from: from,\n    to: to,\n    // patient_id\n    message: message\n  }).then(res => {\n    console.log('Message has been sent successfully');\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction updateEmergency(data) {\n  axios.post(CONSTANTS.URL + 'emergency/update', {\n    _id: 1,\n    data: data\n  }).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nasync function getChat(to, from) {\n  let result;\n  await axios.get(CONSTANTS.URL + 'message/chat', {\n    params: {\n      to: to,\n      from: from\n    }\n  }).then(res => {\n    console.log(res);\n    result = res.data;\n  }).catch(err => {\n    console.log(err);\n  });\n  return result;\n} // async function createEmergency() {\n//   await axios\n//     .post(CONSTANTS.URL + 'emergency/create', {\n//       id: 1,\n//       data: this.state\n//     })\n//     .then(res => {\n//       // console.log(res);\n//       // console.log(res.data);\n//     })\n//     .catch(err => {\n//       console.log(err);\n//     });\n// }\n\n\nexport default {\n  getUser,\n  getEmergency,\n  createEmergency,\n  createMessage,\n  updateOnboardingStatus,\n  updateUser,\n  updateEmergency,\n  getChat\n}; // axios.create({\n//   baseURL: CONSTANTS.URL,\n//   responseType: 'json'\n// });","map":{"version":3,"sources":["/patient_frontend/src/src/utils/API.js"],"names":["axios","CONSTANTS","getUser","id","result","get","URL","params","_id","then","res","console","log","data","catch","error","updateUser","post","err","updateOnboardingStatus","status","onBoardingStatus","getEmergency","createEmergency","createMessage","from","message","to","updateEmergency","getChat"],"mappings":"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","sourcesContent":["// utils/API.js\n\nimport axios from 'axios';\nimport CONSTANTS from './Constants';\n\nasync function getUser(id) {\n  let result;\n  await axios\n    .get(CONSTANTS.URL + 'user/', {\n      params: { _id: id }\n    })\n    .then(res => {\n      console.log('In user get api call');\n      console.log(res);\n      result = res.data;\n      // console.log(res);\n      // console.log(res.data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  return result;\n}\n\nfunction updateUser(data) {\n  axios\n    .post(CONSTANTS.URL + 'user/update', {\n      _id: 1,\n      data: data\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nfunction updateOnboardingStatus(status) {\n  return axios\n    .post(CONSTANTS.URL + 'user/update/onboardingstatus', {\n      _id: 1,\n      onBoardingStatus: status\n    })\n    .then(res => {\n      return res.data;\n    });\n}\n\nasync function getEmergency() {\n  await axios\n    .get(CONSTANTS.URL + 'emergency/', {\n      params: { _id: 1 }\n    })\n    .then(res => {\n      return res.data;\n      // console.log(res);\n      // console.log(res.data);\n    });\n}\n\nfunction createEmergency(data) {\n  axios\n    .post(CONSTANTS.URL + 'emergency/create', {\n      _id: 1,\n      data: data\n    })\n    .then(res => {\n      // console.log(res);\n      // console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nfunction createMessage(from, message, to) {\n  // console.log('from' + from);\n  // console.log('to' + to);\n  // console.log('message' + message);\n  return axios\n    .post(CONSTANTS.URL + 'message/create', {\n      from: from,\n      to: to, // patient_id\n      message: message\n    })\n    .then(res => {\n      console.log('Message has been sent successfully');\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nfunction updateEmergency(data) {\n  axios\n    .post(CONSTANTS.URL + 'emergency/update', {\n      _id: 1,\n      data: data\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nasync function getChat(to, from) {\n  let result;\n  await axios\n    .get(CONSTANTS.URL + 'message/chat', {\n      params: { to: to, from: from }\n    })\n    .then(res => {\n      console.log(res);\n      result = res.data;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  return result;\n}\n\n// async function createEmergency() {\n//   await axios\n//     .post(CONSTANTS.URL + 'emergency/create', {\n//       id: 1,\n//       data: this.state\n//     })\n//     .then(res => {\n//       // console.log(res);\n//       // console.log(res.data);\n//     })\n//     .catch(err => {\n//       console.log(err);\n//     });\n// }\n\nexport default {\n  getUser,\n  getEmergency,\n  createEmergency,\n  createMessage,\n  updateOnboardingStatus,\n  updateUser,\n  updateEmergency,\n  getChat\n};\n\n// axios.create({\n//   baseURL: CONSTANTS.URL,\n//   responseType: 'json'\n// });\n"]},"metadata":{},"sourceType":"module"}