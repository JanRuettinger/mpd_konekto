{"ast":null,"code":"var _jsxFileName = \"/patient_frontend/src/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { AppProvider } from './utils/AppContext';\nimport EmergencyDetails from './Views/EmergencyDetails';\nimport Settings from './Views/Settings';\nimport withRoot from './custom_theme/withRoot';\nimport EmergencySent from './Views/EmergencySent';\nimport Onboarding from './Views/Onboarding';\nimport Tutorial from './Views/Tutorial';\nimport TransmittedData from './Views/TransmittedData';\nimport Message from './Views/Message';\nimport Reset from './Views/Reset';\nimport Home from './Views/Home';\nimport Loading from './Views/Loading';\nimport MiscEmergency from './Views/MiscEmergency';\nimport API from './utils/API';\nimport GeoCoder from './utils/Geocoder';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setOnBoardingStatus = status => {\n      this.setState({\n        onBoardingStatus: status\n      });\n      API.updateOnboardingStatus(status);\n    };\n\n    this.setFullname = fullname => {\n      console.log('In setFullname');\n      console.log(fullname);\n      this.setState({\n        fullname: fullname\n      });\n    };\n\n    this.setEmergencyType = emergencyType => {\n      this.setState({\n        emergencyType: emergencyType\n      }); // API.updateOnboardingStatus(emergencytype);\n    };\n\n    this.setLocation = async location => {\n      console.log('In set Locaiton');\n      console.log(this.state);\n      await GeoCoder.reverse( // HACK\n      // { lat: location.latitude, lon: location.longitude },\n      {\n        lat: 47.423371,\n        lon: 10.99961\n      }, (err, res) => {\n        this.setState({\n          city: res[0].city\n        });\n        this.setState({\n          country: res[0].country\n        });\n      }); // HACK\n      // await this.setState({ location: location });\n\n      await this.setState({\n        location: {\n          latitude: 47.423371,\n          longitude: 10.99961\n        }\n      });\n      console.log(this.state);\n    };\n\n    this.setEmergencyDetails = details => {\n      console.log('In Set Emergency Details');\n      this.setState({\n        emergencyDetails: details\n      });\n    };\n\n    this.setAffectedPersons = affectedPersons => {\n      console.log('In Set Affected Persons');\n      console.log(affectedPersons);\n      this.setState({\n        affectedPersons: affectedPersons\n      });\n      console.log(this.state);\n    };\n\n    this.setEmergencyNote = async note => {\n      console.log('In Set Emergency Note');\n      await this.setState({\n        emergencyNote: note\n      });\n      await this.updateEmergency();\n    };\n\n    this.submitEmergency = () => {\n      // patient_id\n      let data = {\n        patient_id: 1,\n        emergencyType: this.state.emergencyType,\n        city: this.state.city,\n        country: this.state.country,\n        location: this.state.location\n      };\n      API.createEmergency(data);\n    };\n\n    this.updateEmergency = () => {\n      console.log('Update Emergency Details');\n      console.log(this.state); // patient_id\n\n      let data = {\n        patient_id: 1,\n        emergencyType: this.state.emergencyType,\n        emergencyDetails: this.state.emergencyDetails,\n        affectedPersons: this.state.affectedPersons,\n        emergencyNote: this.state.emergencyNote,\n        city: this.state.city,\n        country: this.state.country,\n        location: this.state.location,\n        emergencyStatus: 0\n      };\n      API.updateEmergency(data);\n    };\n\n    this.setOnBoardingStatus = this.setOnBoardingStatus.bind(this);\n    this.setLocation = this.setLocation.bind(this);\n    this.state = {\n      onBoardingStatus: false,\n      location: {\n        latitude: 47.423371,\n        longitude: 10.99961\n      },\n      emergencyType: null,\n      emergencyDetails: null,\n      affectedPersons: null,\n      emergencyNote: null,\n      fullname: null,\n      setOnBoardingStatus: this.setOnBoardingStatus,\n      setLocation: this.setLocation,\n      setEmergencyType: this.setEmergencyType,\n      setAffectedPersons: this.setAffectedPersons,\n      setEmergencyDetails: this.setEmergencyDetails,\n      setEmergencyNote: this.setEmergencyNote,\n      submitEmergency: this.submitEmergency,\n      setFullname: this.setFullname\n    };\n  }\n\n  render() {\n    return React.createElement(AppProvider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/emergency_details/\",\n      component: EmergencyDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/settings/\",\n      component: Settings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/emergency_sent\",\n      component: EmergencySent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/tutorial\",\n      component: Tutorial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/onboarding\",\n      component: Onboarding,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/reset\",\n      component: Reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/transmitted_data\",\n      component: TransmittedData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/message\",\n      component: Message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/misc_emergency\",\n      component: MiscEmergency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Loading\",\n      component: Loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRoot(App);","map":{"version":3,"sources":["/patient_frontend/src/src/App.js"],"names":["React","BrowserRouter","Router","Route","AppProvider","EmergencyDetails","Settings","withRoot","EmergencySent","Onboarding","Tutorial","TransmittedData","Message","Reset","Home","Loading","MiscEmergency","API","GeoCoder","App","Component","constructor","props","setOnBoardingStatus","status","setState","onBoardingStatus","updateOnboardingStatus","setFullname","fullname","console","log","setEmergencyType","emergencyType","setLocation","location","state","reverse","lat","lon","err","res","city","country","latitude","longitude","setEmergencyDetails","details","emergencyDetails","setAffectedPersons","affectedPersons","setEmergencyNote","note","emergencyNote","updateEmergency","submitEmergency","data","patient_id","createEmergency","emergencyStatus","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { AppProvider } from './utils/AppContext';\n\nimport EmergencyDetails from './Views/EmergencyDetails';\nimport Settings from './Views/Settings';\nimport withRoot from './custom_theme/withRoot';\nimport EmergencySent from './Views/EmergencySent';\nimport Onboarding from './Views/Onboarding';\nimport Tutorial from './Views/Tutorial';\nimport TransmittedData from './Views/TransmittedData';\nimport Message from './Views/Message';\nimport Reset from './Views/Reset';\nimport Home from './Views/Home';\nimport Loading from './Views/Loading'\nimport MiscEmergency from './Views/MiscEmergency';\nimport API from './utils/API';\nimport GeoCoder from './utils/Geocoder';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setOnBoardingStatus = this.setOnBoardingStatus.bind(this);\n    this.setLocation = this.setLocation.bind(this);\n    this.state = {\n      onBoardingStatus: false,\n      location: { latitude: 47.423371, longitude: 10.99961 },\n      emergencyType: null,\n      emergencyDetails: null,\n      affectedPersons: null,\n      emergencyNote: null,\n      fullname: null,\n      setOnBoardingStatus: this.setOnBoardingStatus,\n      setLocation: this.setLocation,\n      setEmergencyType: this.setEmergencyType,\n      setAffectedPersons: this.setAffectedPersons,\n      setEmergencyDetails: this.setEmergencyDetails,\n      setEmergencyNote: this.setEmergencyNote,\n      submitEmergency: this.submitEmergency,\n      setFullname: this.setFullname\n    };\n  }\n\n  setOnBoardingStatus = status => {\n    this.setState({ onBoardingStatus: status });\n    API.updateOnboardingStatus(status);\n  };\n\n  setFullname = fullname => {\n    console.log('In setFullname');\n    console.log(fullname);\n    this.setState({ fullname: fullname });\n  };\n\n  setEmergencyType = emergencyType => {\n    this.setState({ emergencyType: emergencyType });\n    // API.updateOnboardingStatus(emergencytype);\n  };\n\n  setLocation = async location => {\n    console.log('In set Locaiton');\n    console.log(this.state);\n    await GeoCoder.reverse(\n      // HACK\n      // { lat: location.latitude, lon: location.longitude },\n      { lat: 47.423371, lon: 10.99961 },\n      (err, res) => {\n        this.setState({ city: res[0].city });\n        this.setState({ country: res[0].country });\n      }\n    );\n    // HACK\n    // await this.setState({ location: location });\n    await this.setState({\n      location: { latitude: 47.423371, longitude: 10.99961 }\n    });\n\n    console.log(this.state);\n  };\n\n  setEmergencyDetails = details => {\n    console.log('In Set Emergency Details');\n    this.setState({ emergencyDetails: details });\n  };\n\n  setAffectedPersons = affectedPersons => {\n    console.log('In Set Affected Persons');\n    console.log(affectedPersons);\n    this.setState({ affectedPersons: affectedPersons });\n    console.log(this.state);\n  };\n\n  setEmergencyNote = async note => {\n    console.log('In Set Emergency Note');\n    await this.setState({ emergencyNote: note });\n    await this.updateEmergency();\n  };\n\n  submitEmergency = () => {\n    // patient_id\n    let data = {\n      patient_id: 1,\n      emergencyType: this.state.emergencyType,\n      city: this.state.city,\n      country: this.state.country,\n      location: this.state.location\n    };\n    API.createEmergency(data);\n  };\n\n  updateEmergency = () => {\n    console.log('Update Emergency Details');\n    console.log(this.state);\n    // patient_id\n    let data = {\n      patient_id: 1,\n      emergencyType: this.state.emergencyType,\n      emergencyDetails: this.state.emergencyDetails,\n      affectedPersons: this.state.affectedPersons,\n      emergencyNote: this.state.emergencyNote,\n      city: this.state.city,\n      country: this.state.country,\n      location: this.state.location,\n      emergencyStatus: 0\n    };\n    API.updateEmergency(data);\n  };\n\n  render() {\n    return (\n      <AppProvider value={this.state}>\n        <Router>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/emergency_details/\" component={EmergencyDetails} />\n          <Route path=\"/settings/\" component={Settings} />\n          <Route path=\"/emergency_sent\" component={EmergencySent} />\n          <Route path=\"/tutorial\" component={Tutorial} />\n          <Route path=\"/onboarding\" component={Onboarding} />\n          <Route path=\"/reset\" component={Reset} />\n          <Route path=\"/transmitted_data\" component={TransmittedData} />\n          <Route path=\"/message\" component={Message} />\n          <Route path=\"/misc_emergency\" component={MiscEmergency} />\n          <Route path=\"/Loading\" component={Loading} />\n        </Router>\n      </AppProvider>\n    );\n  }\n}\n\nexport default withRoot(App);\n"]},"metadata":{},"sourceType":"module"}