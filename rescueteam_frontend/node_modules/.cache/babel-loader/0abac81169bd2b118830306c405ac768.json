{"ast":null,"code":"var _jsxFileName = \"/rescueteam_frontend/src/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport withRoot from './custom_theme/withRoot';\nimport { AppProvider } from './utils/AppContext';\nimport Dashboard from './Dashboard';\nimport Seed from './Seed';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setOnBoardingStatus = status => {\n      this.setState({\n        onBoardingStatus: status\n      });\n    };\n\n    this.setOnBoardingStatus = this.setOnBoardingStatus.bind(this);\n    this.state = {\n      onBoardingStatus: false,\n      setOnBoardingStatus: this.setOnBoardingStatus\n    };\n  } // const onBoarding = { onBoardingDone: false };\n\n\n  render() {\n    return React.createElement(AppProvider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/seed\",\n      exact: true,\n      component: Seed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n} // //Managing States\n// export const StateContext = createContext();\n// export const StatePersonType = ({ reducer, initialState, children }) => (\n//   <StateContext.Provider value={useReducer(reducer, initialState)}>\n//     {children}\n//   </StateContext.Provider>\n// );\n// export const useStateValue = () => useContext(StateContext);\n\n\nexport default withRoot(App);\n/*To be implemented:\n- add HorizontalNonLinearStepWithErrpr\n- add stateManagement as follows:\n--FirstUse\n--Settings\n--FormPersonType\n--FormEmergencyType\n--EmergencySent\n--PeopleAffected\n--AffectedState\n--AffectedStateOther\n--Summary\n--Chat\n\n- copy the grid layout design in the return function and remove it from components\n- adjust all components\n  */","map":{"version":3,"sources":["/rescueteam_frontend/src/src/App.js"],"names":["React","BrowserRouter","Router","Route","withRoot","AppProvider","Dashboard","Seed","App","Component","constructor","props","setOnBoardingStatus","status","setState","onBoardingStatus","bind","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,mBAVmB,GAUGC,MAAM,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEF;AAApB,OAAd;AACD,KAZkB;;AAEjB,SAAKD,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBI,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,KAAL,GAAa;AACXF,MAAAA,gBAAgB,EAAE,KADP;AAEXH,MAAAA,mBAAmB,EAAE,KAAKA;AAFf,KAAb;AAID,GAR+B,CAShC;;;AAMAM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEX,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,MAAzB;AAA0B,MAAA,SAAS,EAAEC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAxB+B,C,CA2BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,QAAQ,CAACI,GAAD,CAAvB;AAEA","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport withRoot from './custom_theme/withRoot';\nimport { AppProvider } from './utils/AppContext';\nimport Dashboard from './Dashboard';\nimport Seed from './Seed';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setOnBoardingStatus = this.setOnBoardingStatus.bind(this);\n    this.state = {\n      onBoardingStatus: false,\n      setOnBoardingStatus: this.setOnBoardingStatus\n    };\n  }\n  // const onBoarding = { onBoardingDone: false };\n\n  setOnBoardingStatus = status => {\n    this.setState({ onBoardingStatus: status });\n  };\n\n  render() {\n    return (\n      <AppProvider value={this.state}>\n        <Router>\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/seed\" exact component={Seed} />\n        </Router>\n      </AppProvider>\n    );\n  }\n}\n\n// //Managing States\n// export const StateContext = createContext();\n// export const StatePersonType = ({ reducer, initialState, children }) => (\n//   <StateContext.Provider value={useReducer(reducer, initialState)}>\n//     {children}\n//   </StateContext.Provider>\n// );\n// export const useStateValue = () => useContext(StateContext);\n\nexport default withRoot(App);\n\n/*To be implemented:\n- add HorizontalNonLinearStepWithErrpr\n- add stateManagement as follows:\n--FirstUse\n--Settings\n--FormPersonType\n--FormEmergencyType\n--EmergencySent\n--PeopleAffected\n--AffectedState\n--AffectedStateOther\n--Summary\n--Chat\n\n- copy the grid layout design in the return function and remove it from components\n- adjust all components\n  */\n"]},"metadata":{},"sourceType":"module"}