{"ast":null,"code":"// utils/API.js\nimport axios from 'axios';\nimport CONSTANTS from './Constants';\n\nfunction getUser() {\n  return axios.get(CONSTANTS.URL + 'user/', {\n    params: {\n      _id: 1\n    }\n  }).then(res => {\n    return res.data; // console.log(res);\n    // console.log(res.data);\n  });\n}\n\nfunction updateUser(data) {\n  axios.post(CONSTANTS.URL + 'user/update', {\n    _id: 1,\n    data: data\n  }).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction updateOnboardingStatus(status) {\n  return axios.post(CONSTANTS.URL + 'user/update/onboardingstatus', {\n    _id: 1,\n    onBoardingStatus: status\n  }).then(res => {\n    return res.data;\n  });\n}\n\nasync function getEmergency() {\n  await axios.get(CONSTANTS.URL + 'emergency/', {\n    params: {\n      _id: 1\n    }\n  }).then(res => {\n    return res.data; // console.log(res);\n    // console.log(res.data);\n  });\n}\n\nfunction updateEmergency(id, data) {\n  axios.post(CONSTANTS.URL + 'emergency/update', {\n    _id: id,\n    data: data\n  }).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nasync function createEmergency(emergency) {\n  axios.post(CONSTANTS.URL + 'emergency/create', emergency).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nasync function createUser(user) {\n  axios.post(CONSTANTS.URL + 'user/create', user).then(res => {\n    console.log(res);\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nasync function getSeed() {\n  await axios.get(CONSTANTS.URL + 'utility/seed').then(res => {\n    return res.data;\n  });\n}\n\nasync function getChat(to, from) {\n  let result;\n  await axios.get(CONSTANTS.URL + 'message/chat', {\n    params: {\n      to: to,\n      from: from\n    }\n  }).then(res => {\n    // console.log(res);\n    result = res.data;\n  }).catch(err => {\n    console.log(err);\n  });\n  return result;\n}\n\nasync function getEmergencies() {\n  let result;\n  await axios.get(CONSTANTS.URL + 'emergency/all').then(response => {\n    result = response.data;\n  }).catch(async error => {\n    result = error;\n  });\n  return result;\n}\n\nfunction createMessage(from, to, message) {\n  axios.post(CONSTANTS.URL + 'message/create', {\n    from: from,\n    to: to,\n    // patient_id\n    message: message\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    console.log('Error in create message' + err);\n    return err;\n  });\n}\n\nexport default {\n  getUser,\n  getEmergency,\n  getSeed,\n  createUser,\n  createEmergency,\n  updateOnboardingStatus,\n  updateUser,\n  updateEmergency,\n  getChat,\n  createMessage,\n  getEmergencies\n}; // axios.create({\n//   baseURL: CONSTANTS.URL,\n//   responseType: 'json'\n// });","map":{"version":3,"sources":["/rescueteam_frontend/src/src/utils/API.js"],"names":["axios","CONSTANTS","getUser","get","URL","params","_id","then","res","data","updateUser","post","console","log","catch","err","updateOnboardingStatus","status","onBoardingStatus","getEmergency","updateEmergency","id","createEmergency","emergency","createUser","user","getSeed","getChat","to","from","result","getEmergencies","response","error","createMessage","message"],"mappings":"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","sourcesContent":["// utils/API.js\n\nimport axios from 'axios';\nimport CONSTANTS from './Constants';\n\nfunction getUser() {\n  return axios\n    .get(CONSTANTS.URL + 'user/', {\n      params: { _id: 1 }\n    })\n    .then(res => {\n      return res.data;\n      // console.log(res);\n      // console.log(res.data);\n    });\n}\n\nfunction updateUser(data) {\n  axios\n    .post(CONSTANTS.URL + 'user/update', {\n      _id: 1,\n      data: data\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nfunction updateOnboardingStatus(status) {\n  return axios\n    .post(CONSTANTS.URL + 'user/update/onboardingstatus', {\n      _id: 1,\n      onBoardingStatus: status\n    })\n    .then(res => {\n      return res.data;\n    });\n}\n\nasync function getEmergency() {\n  await axios\n    .get(CONSTANTS.URL + 'emergency/', {\n      params: { _id: 1 }\n    })\n    .then(res => {\n      return res.data;\n      // console.log(res);\n      // console.log(res.data);\n    });\n}\n\nfunction updateEmergency(id, data) {\n  axios\n    .post(CONSTANTS.URL + 'emergency/update', {\n      _id: id,\n      data: data\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nasync function createEmergency(emergency) {\n  axios\n    .post(CONSTANTS.URL + 'emergency/create', emergency)\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nasync function createUser(user) {\n  axios\n    .post(CONSTANTS.URL + 'user/create', user)\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nasync function getSeed() {\n  await axios.get(CONSTANTS.URL + 'utility/seed').then(res => {\n    return res.data;\n  });\n}\n\nasync function getChat(to, from) {\n  let result;\n  await axios\n    .get(CONSTANTS.URL + 'message/chat', {\n      params: { to: to, from: from }\n    })\n    .then(res => {\n      // console.log(res);\n      result = res.data;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  return result;\n}\n\nasync function getEmergencies() {\n  let result;\n  await axios\n    .get(CONSTANTS.URL + 'emergency/all')\n    .then(response => {\n      result = response.data;\n    })\n    .catch(async error => {\n      result = error;\n    });\n  return result;\n}\n\nfunction createMessage(from, to, message) {\n  axios\n    .post(CONSTANTS.URL + 'message/create', {\n      from: from,\n      to: to, // patient_id\n      message: message\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log('Error in create message' + err);\n      return err;\n    });\n}\n\nexport default {\n  getUser,\n  getEmergency,\n  getSeed,\n  createUser,\n  createEmergency,\n  updateOnboardingStatus,\n  updateUser,\n  updateEmergency,\n  getChat,\n  createMessage,\n  getEmergencies\n};\n\n// axios.create({\n//   baseURL: CONSTANTS.URL,\n//   responseType: 'json'\n// });\n"]},"metadata":{},"sourceType":"module"}