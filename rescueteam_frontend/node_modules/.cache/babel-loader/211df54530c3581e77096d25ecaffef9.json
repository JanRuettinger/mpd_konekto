{"ast":null,"code":"var _jsxFileName = \"/rescueteam_frontend/src/src/Dashboard/Chat.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Grid, Box, Button, Typography } from '@material-ui/core';\nimport CONSTANTS from '../utils/Constants';\n\nconst styles = theme => ({\n  chatcontainer: {\n    borderColor: '#D3D3D3',\n    borderWidth: '3px',\n    borderRadius: '10px',\n    height: '60vh',\n    width: '100%',\n    padding: '20px',\n    'overflow-y': 'auto'\n  },\n  chatbox: {\n    marginTop: '25px',\n    marginBottom: '10px'\n  },\n  message_send: {\n    borderWidth: '0px',\n    backgroundColor: theme.palette.primary.main,\n    padding: '7px',\n    borderRadius: '20px',\n    borderTopRightRadius: '2px',\n    margin: '10px',\n    fontSize: '15px',\n    width: '70%',\n    display: 'flex',\n    color: 'white'\n  },\n  message_received: {\n    borderWidth: '0px',\n    backgroundColor: '#D3D3D3\t',\n    padding: '7px',\n    'border-radius': '20px',\n    borderTopLeftRadius: '2px',\n    margin: '10px',\n    fontSize: '15px',\n    width: '70%'\n  },\n  input: {\n    width: '100%',\n    fontWeight: 'normal'\n  },\n  chatinput: {\n    bottom: 0\n  },\n  send_button: {\n    margin: 'auto',\n    marginTop: '5px'\n  }\n});\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      messages: []\n    };\n  }\n\n  render() {\n    console.log('In render: chat.js');\n    console.log(this.props.messages);\n    console.log('###');\n    let messages = this.props.messages;\n    let Messages = null;\n\n    if (messages) {\n      Messages = messages.map(msg => {\n        if (msg.from == CONSTANTS.FROM) {\n          return React.createElement(Grid, {\n            container: true,\n            flex: true,\n            justify: \"flex-end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(Box, {\n            className: this.classes.message_send,\n            justifyContent: \"center\",\n            border: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, msg.message)));\n        } else {\n          return React.createElement(Grid, {\n            container: true,\n            flex: true,\n            justify: \"flex-start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(Box, {\n            item: true,\n            className: this.classes.message_received,\n            alignItems: \"center\",\n            border: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, msg.message)));\n        }\n      });\n    }\n\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Box, {\n      border: 1,\n      className: this.classes.chatcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Chat\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      className: this.classes.chatbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, Messages), React.createElement(Grid, {\n      item: true,\n      className: this.classes.chatinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Your message\",\n      className: this.classes.input,\n      inputProps: {\n        'aria-label': 'Description'\n      },\n      onChange: this.props.handleInputChange,\n      value: this.props.inputText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Button, {\n      align: \"center\",\n      className: this.classes.send_button // onClick={this.props.onSubmit}\n      ,\n      onClick: async () => {\n        await this.props.onSubmit();\n        await this.props.handleInputChange({\n          target: {\n            value: ''\n          }\n        });\n        await this.props.getNewMessages();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nexport default withStyles(styles)(Chat);","map":{"version":3,"sources":["/rescueteam_frontend/src/src/Dashboard/Chat.js"],"names":["React","withStyles","Input","Grid","Box","Button","Typography","CONSTANTS","styles","theme","chatcontainer","borderColor","borderWidth","borderRadius","height","width","padding","chatbox","marginTop","marginBottom","message_send","backgroundColor","palette","primary","main","borderTopRightRadius","margin","fontSize","display","color","message_received","borderTopLeftRadius","input","fontWeight","chatinput","bottom","send_button","Chat","Component","constructor","props","classes","state","messages","render","console","log","Messages","map","msg","from","FROM","message","handleInputChange","inputText","onSubmit","target","value","getNewMessages"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Grid,Box, Button, Typography } from '@material-ui/core';\nimport CONSTANTS from '../utils/Constants';\n\nconst styles = theme => ({\n  chatcontainer: {\n    borderColor: '#D3D3D3',\n    borderWidth: '3px',\n    borderRadius: '10px',\n    height: '60vh',\n    width: '100%',\n    padding: '20px',\n    'overflow-y': 'auto'\n  },\n  chatbox: {\n    marginTop: '25px',\n    marginBottom: '10px'\n  },\n  message_send: {\n    borderWidth: '0px',\n    backgroundColor: theme.palette.primary.main,\n    padding: '7px',\n    borderRadius: '20px',\n    borderTopRightRadius: '2px',\n    margin: '10px',\n    fontSize: '15px',\n    width: '70%',\n    display: 'flex',\n    color: 'white'\n  },\n  message_received: {\n    borderWidth: '0px',\n    backgroundColor: '#D3D3D3\t',\n    padding: '7px',\n    'border-radius': '20px',\n    borderTopLeftRadius: '2px',\n    margin: '10px',\n    fontSize: '15px',\n    width: '70%'\n  },\n  input: {\n    width: '100%',\n   fontWeight:'normal' \n  },\n  chatinput: {\n    bottom: 0\n  },\n  send_button: { margin: 'auto', marginTop: '5px' }\n});\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      messages: []\n    };\n  }\n\n  render() {\n    console.log('In render: chat.js');\n    console.log(this.props.messages);\n    console.log('###');\n    let messages = this.props.messages;\n    let Messages = null;\n    if (messages) {\n      Messages = messages.map(msg => {\n        if (msg.from == CONSTANTS.FROM) {\n          return (\n            <Grid\n            container \n            flex\n            justify=\"flex-end\">\n              <Box\n                className={this.classes.message_send}\n                justifyContent=\"center\"\n                border={1}\n              >\n                <Typography>{msg.message}</Typography>\n              </Box>\n            </Grid>\n          );\n        } else {\n          return (\n            <Grid\n            container \n            flex\n            justify=\"flex-start\"\n            >\n              <Box\n              item\n                className={this.classes.message_received}\n                alignItems=\"center\"\n                border={1}\n              >\n                <Typography>{msg.message}</Typography>\n              </Box>\n            </Grid>\n          );\n        }\n      });\n    }\n\n    return (\n      <Grid container>\n        <Box border={1} className={this.classes.chatcontainer}>\n          <Grid item sm={12}>\n            <Typography align=\"center\" variant=\"h4\">\n              Chat\n            </Typography>\n            <hr />\n          </Grid>\n          <Grid item sm={12} className={this.classes.chatbox}>\n            {Messages}\n          </Grid>\n\n          <Grid item className={this.classes.chatinput}>\n            <Input\n              placeholder=\"Your message\"\n              className={this.classes.input}\n              inputProps={{\n                'aria-label': 'Description'\n              }}\n              onChange={this.props.handleInputChange}\n              value={this.props.inputText}\n              \n            />\n            <Button\n              align=\"center\"\n              className={this.classes.send_button}\n              // onClick={this.props.onSubmit}\n              onClick={async () => {\n                await this.props.onSubmit();\n                await this.props.handleInputChange({\n                  target: { value: '' }\n                });\n                await this.props.getNewMessages();\n              }}\n            >\n              Send\n            </Button>\n          </Grid>\n        </Box>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Chat);\n"]},"metadata":{},"sourceType":"module"}