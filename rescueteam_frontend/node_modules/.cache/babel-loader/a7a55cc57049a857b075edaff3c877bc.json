{"ast":null,"code":"var _jsxFileName = \"/rescueteam_frontend/src/src/Dashboard/index.js\";\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport { Typography, Grid, Container } from '@material-ui/core';\nimport withRoot from '../custom_theme/withRoot';\nimport { AppProvider } from '../utils/AppContext';\nimport { GridContainer } from '../custom_theme/components/GridContainer';\nimport { Header } from '../Layout';\nimport EmergencyTable from './EmergencyTable';\nimport SimpleMap from './SimpleMap';\nimport Chat from './Chat';\nimport API from '../utils/API';\nimport CONSTANTS from '../utils/Constants';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedID = async id => {\n      console.log('IN click event');\n      console.log('SelectID: ' + id);\n      let patient_id = this.state.emergencies[id].data.patient_id;\n      await this.setState({\n        selectedID: id,\n        patient_id: patient_id\n      });\n      await this.getNewMessages();\n    };\n\n    this.state = {\n      emergencies: null,\n      selectedID: 0,\n      inputText: '',\n      messages: null\n    };\n    this.setSelectedID = this.setSelectedID.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.getNewMessages = this.getNewMessages.bind(this);\n  }\n\n  async componentDidMount() {\n    // get all Emergencies\n    console.log('In component did mount: index.js');\n    await API.getEmergencies().then(async emergencies => {\n      if (emergencies) {\n        let patient_id = emergencies[this.state.selectedID].data.patient_id;\n        await this.setState({\n          emergencies: emergencies,\n          patient_id: patient_id\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    const socket = socketIOClient(CONSTANTS.SOCKETURL);\n    socket.on('message', data => this.getNewMessages());\n    await this.getNewMessages();\n  }\n\n  handleInputChange(event) {\n    console.log('In input change');\n    this.setState({\n      inputText: event.target.value\n    });\n  }\n\n  sendMessage() {\n    console.log('In message send');\n    let patient_id = this.state.emergencies[this.state.selectedID].data.patient_id;\n    let message = this.state.inputText;\n    API.createMessage(CONSTANTS.FROM, patient_id, message);\n    this.setState({\n      inputText: ''\n    });\n  }\n\n  getNewMessages() {\n    console.log('In getNewMessages');\n    let to = this.state.patient_id;\n    console.log('to: ' + to);\n    API.getChat(to, CONSTANTS.FROM).then(data => {\n      console.log('Received data in getChat: ');\n      console.log(data);\n      this.setState({\n        messages: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let emergencies = this.state.emergencies;\n    let map;\n    let emergencytable;\n\n    if (emergencies) {\n      let emergency = this.state.emergencies[this.state.selectedID];\n      console.log('Emergency:' + JSON.stringify(emergency));\n      let location = emergency.data.location;\n      let fullname = emergency.data.fullname;\n      map = React.createElement(SimpleMap, {\n        center: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        name: fullname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n      emergencytable = React.createElement(EmergencyTable, {\n        emergencies: this.state.emergencies,\n        selectedID: this.state.selectedID,\n        setSelectedID: this.setSelectedID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    } else {\n      map = React.createElement(SimpleMap, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Emergency Center Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Container, {\n      component: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Overview of Emergencies\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), emergencytable), React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, map), React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Chat, {\n      handleInputChange: this.handleInputChange,\n      onSubmit: this.sendMessage,\n      inputText: this.state.inputText,\n      ID: this.state.selectedID,\n      patient_id: this.state.patient_id,\n      messages: this.state.messages,\n      getNewMessages: this.getNewMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withRoot(Dashboard);","map":{"version":3,"sources":["/rescueteam_frontend/src/src/Dashboard/index.js"],"names":["React","createContext","useContext","useReducer","BrowserRouter","Router","Route","axios","socketIOClient","Typography","Grid","Container","withRoot","AppProvider","GridContainer","Header","EmergencyTable","SimpleMap","Chat","API","CONSTANTS","Dashboard","Component","constructor","props","setSelectedID","id","console","log","patient_id","state","emergencies","data","setState","selectedID","getNewMessages","inputText","messages","bind","handleInputChange","sendMessage","componentDidMount","getEmergencies","then","catch","error","socket","SOCKETURL","on","event","target","value","message","createMessage","FROM","to","getChat","err","render","map","emergencytable","emergency","JSON","stringify","location","fullname","lat","latitude","lng","longitude"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport { Typography, Grid, Container } from '@material-ui/core';\nimport withRoot from '../custom_theme/withRoot';\nimport { AppProvider } from '../utils/AppContext';\nimport { GridContainer } from '../custom_theme/components/GridContainer';\nimport { Header } from '../Layout';\nimport EmergencyTable from './EmergencyTable';\nimport SimpleMap from './SimpleMap';\nimport Chat from './Chat';\nimport API from '../utils/API';\nimport CONSTANTS from '../utils/Constants';\n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emergencies: null,\n      selectedID: 0,\n      inputText: '',\n      messages: null\n    };\n    this.setSelectedID = this.setSelectedID.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.getNewMessages = this.getNewMessages.bind(this);\n  }\n\n  async componentDidMount() {\n    // get all Emergencies\n    console.log('In component did mount: index.js');\n\n    await API.getEmergencies()\n      .then(async emergencies => {\n        if (emergencies) {\n          let patient_id = emergencies[this.state.selectedID].data.patient_id;\n          await this.setState({\n            emergencies: emergencies,\n            patient_id: patient_id\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    const socket = socketIOClient(CONSTANTS.SOCKETURL);\n    socket.on('message', data => this.getNewMessages());\n    await this.getNewMessages();\n  }\n\n  handleInputChange(event) {\n    console.log('In input change');\n    this.setState({ inputText: event.target.value });\n  }\n\n  sendMessage() {\n    console.log('In message send');\n    let patient_id = this.state.emergencies[this.state.selectedID].data\n      .patient_id;\n\n    let message = this.state.inputText;\n    API.createMessage(CONSTANTS.FROM, patient_id, message);\n    this.setState({ inputText: '' });\n  }\n\n  getNewMessages() {\n    console.log('In getNewMessages');\n    let to = this.state.patient_id;\n    console.log('to: ' + to);\n    API.getChat(to, CONSTANTS.FROM)\n      .then(data => {\n        console.log('Received data in getChat: ');\n        console.log(data);\n        this.setState({ messages: data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  setSelectedID = async id => {\n    console.log('IN click event');\n    console.log('SelectID: ' + id);\n    let patient_id = this.state.emergencies[id].data.patient_id;\n    await this.setState({ selectedID: id, patient_id: patient_id });\n    await this.getNewMessages();\n  };\n\n  render() {\n    let emergencies = this.state.emergencies;\n    let map;\n    let emergencytable;\n    if (emergencies) {\n      let emergency = this.state.emergencies[this.state.selectedID];\n      console.log('Emergency:' + JSON.stringify(emergency));\n      let location = emergency.data.location;\n      let fullname = emergency.data.fullname;\n      map = (\n        <SimpleMap\n          center={{ lat: location.latitude, lng: location.longitude }}\n          name={fullname}\n        />\n      );\n      emergencytable = (\n        <EmergencyTable\n          emergencies={this.state.emergencies}\n          selectedID={this.state.selectedID}\n          setSelectedID={this.setSelectedID}\n        />\n      );\n    } else {\n      map = <SimpleMap />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header title=\"Emergency Center Dashboard\" />\n\n        <Container component=\"main\">\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid item sm={12}>\n              <br />\n              <Typography align=\"center\" variant=\"h3\">\n                Overview of Emergencies\n              </Typography>\n              <br />\n              {emergencytable}\n            </Grid>\n            <Grid item sm={6}>\n              {map}\n            </Grid>\n            <Grid item sm={6}>\n              <Chat\n                handleInputChange={this.handleInputChange}\n                onSubmit={this.sendMessage}\n                inputText={this.state.inputText}\n                ID={this.state.selectedID}\n                patient_id={this.state.patient_id}\n                messages={this.state.messages}\n                getNewMessages={this.getNewMessages}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRoot(Dashboard);\n"]},"metadata":{},"sourceType":"module"}