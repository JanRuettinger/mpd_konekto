{"ast":null,"code":"import _slicedToArray from \"/rescueteam_frontend/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/rescueteam_frontend/src/src/Dashboard/Dropdown.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport theme from '../custom_theme/theme';\nimport API from '../utils/API';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    maxWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n    padding: 0,\n    fontSize: '10px'\n  },\n  item: {\n    padding: 0\n  }\n}));\nconst options_long = ['Emergency Request unaswered', 'Emergency Team dispatched'];\nconst options_short = ['unaswered', 'team dispatched'];\nexport default function SimpleListMenu(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const _React$useState3 = React.useState(1),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    let new_emergency = props.emergency.data;\n    new_emergency['emergencyStatus'] = index;\n    API.updateEmergency(props.emergency._id, new_emergency);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const rightToggleStyle = {\n    padding: '0px',\n    textAlign: 'center',\n    margin: 0,\n    backgroundColor: props.selected ? theme.palette.primary.main : null\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(List, {\n    component: \"nav\",\n    \"aria-label\": \"Device settings\",\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"lock-menu\",\n    \"aria-label\": \"When device is locked\",\n    onClick: handleClickListItem,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: options_short[props.emergency.data.emergencyStatus],\n    style: rightToggleStyle // secondary={options[selectedIndex]}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Menu, {\n    id: \"lock-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, options_long.map((option, index) => React.createElement(MenuItem, {\n    key: option // disabled={index === 0}\n    ,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, option))));\n}","map":{"version":3,"sources":["/rescueteam_frontend/src/src/Dashboard/Dropdown.js"],"names":["React","makeStyles","List","ListItem","ListItemText","MenuItem","Menu","theme","API","useStyles","root","width","maxWidth","backgroundColor","palette","background","paper","padding","fontSize","item","options_long","options_short","SimpleListMenu","props","classes","useState","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","handleClickListItem","event","currentTarget","handleMenuItemClick","index","new_emergency","emergency","data","updateEmergency","_id","handleClose","rightToggleStyle","textAlign","margin","selected","primary","main","emergencyStatus","Boolean","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport theme from '../custom_theme/theme';\nimport API from '../utils/API';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    maxWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n    padding: 0,\n    fontSize: '10px'\n  },\n  item: {\n    padding: 0\n  }\n}));\n\nconst options_long = [\n  'Emergency Request unaswered',\n  'Emergency Team dispatched'\n];\n\nconst options_short = ['unaswered', 'team dispatched'];\n\nexport default function SimpleListMenu(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    let new_emergency = props.emergency.data;\n    new_emergency['emergencyStatus'] = index;\n    API.updateEmergency(props.emergency._id, new_emergency);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const rightToggleStyle = {\n    padding: '0px',\n    textAlign: 'center',\n    margin: 0,\n    backgroundColor: props.selected ? theme.palette.primary.main : null\n  };\n\n  return (\n    <div className={classes.root}>\n      <List\n        component=\"nav\"\n        aria-label=\"Device settings\"\n        className={classes.item}\n      >\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          aria-label=\"When device is locked\"\n          onClick={handleClickListItem}\n          className={classes.item}\n        >\n          <ListItemText\n            primary={options_short[props.emergency.data.emergencyStatus]}\n            style={rightToggleStyle}\n            // secondary={options[selectedIndex]}\n          />\n        </ListItem>\n      </List>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options_long.map((option, index) => (\n          <MenuItem\n            key={option}\n            // disabled={index === 0}\n            selected={index === selectedIndex}\n            onClick={event => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}